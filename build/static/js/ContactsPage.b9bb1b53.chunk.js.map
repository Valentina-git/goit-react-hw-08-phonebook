{"version":3,"sources":["components/contactForm/ContactFormStyled.js","components/alert/AlertStyled.js","components/alert/Alert.js","redux/selectors/phonebookSelectors.js","redux/operations/phonebookOperations.js","components/contactForm/ContactForm.js","components/contactList/ContactListStyled.js","components/contactList/contactListItem/ContactListItemStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","redux/pages/contactsPage/ContactsPageStyled.js","redux/pages/contactsPage/ContactsPage.js"],"names":["ContactFormWrapper","styled","div","AlertBox","Alert","msg","className","getContacts","state","phonebook","contacts","getFilter","filter","isLoading","loader","getFilteredContacts","createSelector","item","name","toLowerCase","includes","token","axios","defaults","headers","common","Authorization","initialState","number","ContactForm","useSelector","dispatch","getLocalId","useDispatch","useState","setState","alertMsg","setAlertMsg","showAlert","setShowAlert","onHandleChange","e","target","value","prev","showAlertMsg","setTimeout","CSSTransition","classNames","in","timeout","unmountOnExit","onSubmit","preventDefault","contact","user","some","elem","length","getState","a","addContactRequest","auth","persistToken","localId","post","process","res","addContactSuccess","id","data","addContactError","type","onChange","ContactListWrapper","ContactLi","li","ContactListItem","onClick","dataset","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","operationDeleteContact","setFilter","data-id","ContactList","useEffect","getContactsRequest","get","Object","keys","map","key","getContactsSuccess","getContactsError","TransitionGroup","component","classnames","FilterWrapper","connect","ContactsWrapper","ContactsPage","loading","color","height","width","appear"],"mappings":"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","file":"static/js/ContactsPage.b9bb1b53.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst ContactFormWrapper = styled.div`\r\n  padding: 20px 0;\r\n  width: 100%;\r\n  background-color: #efefef;\r\n  .formLabel {\r\n    font-weight: 700;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n  .formInput {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n  .formBtn {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .formBtn:hover,\r\n  .formBtn:focus {\r\n    background-color: yellow;\r\n  }\r\n`;\r\n\r\nexport default ContactFormWrapper;\r\n","import styled from 'styled-components';\r\n\r\nconst AlertBox = styled.div`\r\n  padding: 15px;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 40px;\r\n  background-color: tomato;\r\n  max-width: 450px;\r\n  border-radius: 5px;\r\n\r\n  .alertText {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport default AlertBox;\r\n","import React from 'react';\r\nimport AlertBox from './AlertStyled';\r\n\r\nconst Alert = ({ msg }) => {\r\n  return (\r\n    <AlertBox>\r\n      <p className=\"alertText\">{msg}</p>\r\n    </AlertBox>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.phonebook.contacts;\r\nexport const getFilter = state => state.phonebook.filter;\r\nexport const isLoading = state => state.phonebook.loader;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(item =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from '../actions/phonebookActions';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const operationAddContact = contact => async (dispatch, getState) => {\r\n  dispatch(addContactRequest());\r\n\r\n  const {\r\n    auth: { token: persistToken, localId },\r\n  } = getState();\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}/contacts/${localId}.json?auth=${persistToken}`,\r\n      contact,\r\n    );\r\n    dispatch(addContactSuccess({ ...contact, id: res.data.name }));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const operationGetContacts = () => async (dispatch, getState) => {\r\n  dispatch(getContactsRequest());\r\n\r\n  const {\r\n    auth: { token: persistToken, localId },\r\n  } = getState();\r\n\r\n  if (!persistToken) return;\r\n  token.set(persistToken);\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}/contacts/${localId}.json?auth=${persistToken}`,\r\n    );\r\n\r\n    if (res.data) {\r\n      const contacts = Object.keys(res.data).map(key => ({\r\n        ...res.data[key],\r\n        id: key,\r\n      }));\r\n\r\n      dispatch(getContactsSuccess(contacts));\r\n    } else dispatch(getContactsSuccess([]));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error));\r\n  }\r\n};\r\n\r\nexport const operationDeleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport ContactFormWrapper from './ContactFormStyled';\r\nimport Alert from '../alert/Alert';\r\nimport { getContacts } from '../../redux/selectors/phonebookSelectors';\r\nimport { operationAddContact } from '../../redux/operations/phonebookOperations';\r\nimport { getLocalId } from '../../redux/selectors/authSelectors';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const localId = useSelector(getLocalId);\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const [alertMsg, setAlertMsg] = useState('');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const onHandleChange = e => {\r\n    const { name, value } = e.target;\r\n    setState(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const onHandleSubmit = e => {\r\n    e.preventDefault();\r\n    const user = { name: state.name, number: state.number };\r\n\r\n    if (contacts.some(elem => elem.name === user.name)) {\r\n      showAlertMsg(`${user.name} is already in contacts`);\r\n      return;\r\n    }\r\n    if (!user.name.length) {\r\n      showAlertMsg('Please enter a name');\r\n      return;\r\n    }\r\n    if (!user.number.length) {\r\n      showAlertMsg('Pleas enter a number');\r\n      return;\r\n    }\r\n    dispatch(operationAddContact(user, localId));\r\n    setState({ ...initialState });\r\n  };\r\n\r\n  const showAlertMsg = msg => {\r\n    setAlertMsg(msg);\r\n    setShowAlert(true);\r\n\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n\r\n    setTimeout(() => {\r\n      setAlertMsg('');\r\n    }, 3250);\r\n  };\r\n\r\n  const { name, number } = state;\r\n  return (\r\n    <ContactFormWrapper>\r\n      <CSSTransition\r\n        classNames=\"myAlert\"\r\n        in={showAlert}\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <Alert msg={alertMsg} />\r\n      </CSSTransition>\r\n\r\n      <form onSubmit={onHandleSubmit}>\r\n        <label className=\"formLabel\">\r\n          Name\r\n          <input\r\n            className=\"formInput\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={onHandleChange}\r\n          />\r\n        </label>\r\n        <label className=\"formLabel\">\r\n          Number\r\n          <input\r\n            className=\"formInput\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={onHandleChange}\r\n          />\r\n        </label>\r\n        <button className=\"formBtn\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </ContactFormWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from 'styled-components';\r\n\r\nconst ContactListWrapper = styled.div`\r\n  padding: 10px 0;\r\n\r\n  li:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  .myList-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n  .myList-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .myList-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .myList-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms;\r\n  }\r\n`;\r\n\r\nexport default ContactListWrapper;\r\n","import styled from 'styled-components';\r\n\r\nconst ContactLi = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 5px 15px;\r\n  border: 1px solid navy;\r\n  border-radius: 5px;\r\n  box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n\r\n  .contactListName {\r\n    font-weight: 700;\r\n    margin-right: 5px;\r\n  }\r\n  .contactListNumber {\r\n    margin-right: 10px;\r\n  }\r\n  .contactListBtn {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .contactListBtn:hover,\r\n  .contactListBtn:focus {\r\n    background-color: yellow;\r\n  }\r\n`;\r\n\r\nexport default ContactLi;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactLi from './ContactListItemStyled';\r\nimport { operationDeleteContact } from '../../../redux/operations/phonebookOperations';\r\nimport { setFilter } from '../../../redux/actions/phonebookActions';\r\nimport {\r\n  getFilter,\r\n  getFilteredContacts,\r\n} from '../../../redux/selectors/phonebookSelectors';\r\n\r\nconst ContactListItem = ({ item }) => {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onHandleDelete = e => {\r\n    const id = e.target.dataset.id;\r\n    dispatch(operationDeleteContact(id));\r\n\r\n    if (\r\n      contacts.filter(item =>\r\n        item.name.toLowerCase().includes(filter.toLowerCase()),\r\n      ).length < 2\r\n    ) {\r\n      dispatch(setFilter(''));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContactLi>\r\n      <span className=\"contactListName\" key={item.id}>\r\n        {item.name}:\r\n      </span>\r\n      <span className=\"contactListNumber\">{item.number}</span>\r\n      <button\r\n        className=\"contactListBtn\"\r\n        type=\"button\"\r\n        onClick={onHandleDelete}\r\n        data-id={item.id}\r\n      >\r\n        Delete contact\r\n      </button>\r\n    </ContactLi>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport ContactListWrapper from './ContactListStyled';\r\nimport { operationGetContacts } from '../../redux/operations/phonebookOperations';\r\nimport ContactListItem from './contactListItem/ContactListItem';\r\nimport {\r\n  getFilter,\r\n  getFilteredContacts,\r\n} from '../../redux/selectors/phonebookSelectors';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(operationGetContacts());\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <ContactListWrapper>\r\n      <TransitionGroup component=\"ul\" classnames=\"list\">\r\n        {contacts\r\n          .filter(item =>\r\n            item.name.toLowerCase().includes(filter.toLowerCase()),\r\n          )\r\n          .map(item => (\r\n            <CSSTransition classNames=\"myList\" key={item.id} timeout={250}>\r\n              <ContactListItem item={item} />\r\n            </CSSTransition>\r\n          ))}\r\n      </TransitionGroup>\r\n    </ContactListWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from 'styled-components';\r\n\r\nconst FilterWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 20px 0;\r\n\r\n  .filterLabel {\r\n    font-weight: 700;\r\n    display: block;\r\n  }\r\n  .filterInput {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default FilterWrapper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setFilter } from '../../redux/actions/phonebookActions';\r\nimport FilterWrapper from './FilterStyled';\r\n\r\nconst Filter = ({ setFilter, filter }) => {\r\n  const onHandleChange = e => {\r\n    const { value } = e.target;\r\n    setFilter(value);\r\n  };\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      <label className=\"filterLabel\">\r\n        Search by name\r\n        <input\r\n          className=\"filterInput\"\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.phonebook.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilter: value => {\r\n      dispatch(setFilter(value));\r\n    },\r\n  };\r\n};\r\n\r\nFilter.propTypes = {\r\n  setFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import styled from 'styled-components';\r\n\r\nconst ContactsWrapper = styled.div`\r\n  padding: 20px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border: 1px solid navy;\r\n  border-radius: 10px;\r\n  width: 500px;\r\n  margin: 0 auto;\r\n  background-color: #efefef;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n  .pageTitle {\r\n    margin-bottom: 20px;\r\n  }\r\n  .contactsTitle {\r\n    margin-bottom: 10px;\r\n    position: relative;\r\n    z-index: 1;\r\n    overflow: hidden;\r\n  }\r\n  .myTitle-appear {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n  .myTitle-appear-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 500ms;\r\n  }\r\n  .myTitle-exit {\r\n    opacity: 1;\r\n  }\r\n  .myTitle-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 500ms;\r\n  }\r\n  .myFilter-enter {\r\n    opacity: 0;\r\n    transform: translateY(-50%);\r\n  }\r\n  .myFilter-enter-active {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    transition: all 250ms;\r\n  }\r\n  .myFilter-exit {\r\n    opacity: 1;\r\n  }\r\n  .myFilter-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 250ms;\r\n  }\r\n`;\r\n\r\nexport default ContactsWrapper;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport ContactForm from '../../../components/contactForm/ContactForm';\r\nimport ContactList from '../../../components/contactList/ContactList';\r\nimport Filter from '../../../components/filter/Filter';\r\nimport ContactsWrapper from './ContactsPageStyled';\r\nimport { getContacts, isLoading } from '../../selectors/phonebookSelectors';\r\n\r\nconst ContactsPage = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const loading = useSelector(isLoading);\r\n\r\n  return (\r\n    <ContactsWrapper>\r\n      {loading && (\r\n        <div className=\"loaderWrapper\">\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <CSSTransition\r\n        className=\"myTitle\"\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        unmountOnExit\r\n      >\r\n        <h1 className=\"pageTitle\">Phonebook</h1>\r\n      </CSSTransition>\r\n\r\n      <ContactForm />\r\n\r\n      <h2 className=\"contactsTitle\">Contacts</h2>\r\n\r\n      <CSSTransition\r\n        classNames=\"myFilter\"\r\n        in={contacts.length > 1}\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <Filter />\r\n      </CSSTransition>\r\n\r\n      <ContactList />\r\n    </ContactsWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"sourceRoot":""}