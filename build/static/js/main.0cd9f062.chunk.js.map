{"version":3,"sources":["redux/selectors/phonebookSelectors.js","components/AppStyled.js","components/contactForm/ContactFormStyled.js","components/alert/AlertStyled.js","components/alert/Alert.js","redux/actions/phonebookActions.js","components/contactForm/ContactForm.js","redux/operations/phonebookOperations.js","components/contactList/ContactListStyled.js","components/contactList/contactListItem/ContactListItemStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/App.js","redux/reducers/phonebookReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["getContacts","state","phonebook","contacts","getFilter","filter","isLoading","loader","getFilteredContacts","createSelector","item","name","toLowerCase","includes","AppWrapper","styled","div","ContactFormWrapper","AlertBox","Alert","msg","className","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactsRequest","getContactsSuccess","getContactsError","setFilter","initialState","number","ContactForm","useSelector","dispatch","useDispatch","useState","setState","alertMsg","setAlertMsg","showAlert","setShowAlert","onHandleChange","e","target","value","prev","showAlertMsg","setTimeout","CSSTransition","classNames","in","timeout","unmountOnExit","onSubmit","preventDefault","contact","user","some","elem","length","a","axios","post","process","res","id","data","type","onChange","ContactListWrapper","ContactLi","li","ContactListItem","onClick","dataset","delete","operationDeleteContact","data-id","ContactList","useEffect","get","Object","keys","map","key","TransitionGroup","component","classnames","FilterWrapper","connect","App","loading","color","height","width","appear","contactsReducer","createReducer","payload","_","filterReducer","loaderReducer","errorReducer","phonebookReducer","combineReducers","error","rootReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cd9f062.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.phonebook.contacts;\r\nexport const getFilter = state => state.phonebook.filter;\r\nexport const isLoading = state => state.phonebook.loader;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(item =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n","import styled from 'styled-components';\r\n\r\nconst AppWrapper = styled.div`\r\n  padding: 20px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border: 1px solid navy;\r\n  border-radius: 10px;\r\n  width: 500px;\r\n  margin: 0 auto;\r\n  background-color: #efefef;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n  .pageTitle {\r\n    margin-bottom: 20px;\r\n  }\r\n  .contactsTitle {\r\n    margin-bottom: 10px;\r\n    position: relative;\r\n    z-index: 1;\r\n    overflow: hidden;\r\n  }\r\n  .myTitle-appear {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n  .myTitle-appear-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 500ms;\r\n  }\r\n  .myTitle-exit {\r\n    opacity: 1;\r\n  }\r\n  .myTitle-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 500ms;\r\n  }\r\n  .myFilter-enter {\r\n    opacity: 0;\r\n    transform: translateY(-50%);\r\n  }\r\n  .myFilter-enter-active {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    transition: all 250ms;\r\n  }\r\n  .myFilter-exit {\r\n    opacity: 1;\r\n  }\r\n  .myFilter-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 250ms;\r\n  }\r\n`;\r\n\r\nexport default AppWrapper;\r\n","import styled from 'styled-components';\r\n\r\nconst ContactFormWrapper = styled.div`\r\n  padding: 20px 0;\r\n  width: 100%;\r\n  background-color: #efefef;\r\n  .formLabel {\r\n    font-weight: 700;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n  .formInput {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n  .formBtn {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .formBtn:hover,\r\n  .formBtn:focus {\r\n    background-color: yellow;\r\n  }\r\n`;\r\n\r\nexport default ContactFormWrapper;\r\n","import styled from 'styled-components';\r\n\r\nconst AlertBox = styled.div`\r\n  padding: 15px;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 40px;\r\n  background-color: tomato;\r\n  max-width: 450px;\r\n  border-radius: 5px;\r\n\r\n  .alertText {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport default AlertBox;\r\n","import React from 'react';\r\nimport AlertBox from './AlertStyled';\r\n\r\nconst Alert = ({ msg }) => {\r\n  return (\r\n    <AlertBox>\r\n      <p className=\"alertText\">{msg}</p>\r\n    </AlertBox>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactRequest = createAction('phonebook/addRequest');\r\nexport const addContactSuccess = createAction('phonebook/addSuccess');\r\nexport const addContactError = createAction('phonebook/addError');\r\n\r\nexport const deleteContactRequest = createAction('phonebook/deleteRequest');\r\nexport const deleteContactSuccess = createAction('phonebook/deleteSuccess');\r\nexport const deleteContactError = createAction('phonebook/deleteError');\r\n\r\nexport const getContactsRequest = createAction('phonebook/getRequest');\r\nexport const getContactsSuccess = createAction('phonebook/getSuccess');\r\nexport const getContactsError = createAction('phonebook/getError');\r\n\r\nexport const setFilter = createAction('phonebook/setFilter');\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport ContactFormWrapper from './ContactFormStyled';\r\nimport Alert from '../alert/Alert';\r\nimport { getContacts } from '../../redux/selectors/phonebookSelectors';\r\nimport { operationAddContact } from '../../redux/operations/phonebookOperations';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const [alertMsg, setAlertMsg] = useState('');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const onHandleChange = e => {\r\n    const { name, value } = e.target;\r\n    setState(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const onHandleSubmit = e => {\r\n    e.preventDefault();\r\n    const user = { name: state.name, number: state.number };\r\n    if (contacts.some(elem => elem.name === user.name)) {\r\n      showAlertMsg(`${user.name} is already in contacts`);\r\n      return;\r\n    }\r\n    if (!user.name.length) {\r\n      showAlertMsg('Please enter a name');\r\n      return;\r\n    }\r\n    if (!user.number.length) {\r\n      showAlertMsg('Pleas enter a number');\r\n      return;\r\n    }\r\n    dispatch(operationAddContact(user));\r\n    setState({ ...initialState });\r\n  };\r\n\r\n  const showAlertMsg = msg => {\r\n    setAlertMsg(msg);\r\n    setShowAlert(true);\r\n\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n\r\n    setTimeout(() => {\r\n      setAlertMsg('');\r\n    }, 3250);\r\n  };\r\n\r\n  const { name, number } = state;\r\n  return (\r\n    <ContactFormWrapper>\r\n      <CSSTransition\r\n        classNames=\"myAlert\"\r\n        in={showAlert}\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <Alert msg={alertMsg} />\r\n      </CSSTransition>\r\n\r\n      <form onSubmit={onHandleSubmit}>\r\n        <label className=\"formLabel\">\r\n          Name\r\n          <input\r\n            className=\"formInput\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={onHandleChange}\r\n          />\r\n        </label>\r\n        <label className=\"formLabel\">\r\n          Number\r\n          <input\r\n            className=\"formInput\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={onHandleChange}\r\n          />\r\n        </label>\r\n        <button className=\"formBtn\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </ContactFormWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from '../actions/phonebookActions';\r\n\r\nexport const operationAddContact = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_URL}/contacts.json`,\r\n      contact,\r\n    );\r\n    dispatch(addContactSuccess({ ...contact, id: res.data.name }));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const operationGetContacts = () => async dispatch => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}/contacts.json`,\r\n    );\r\n\r\n    if (res.data) {\r\n      const contacts = Object.keys(res.data).map(key => ({\r\n        ...res.data[key],\r\n        id: key,\r\n      }));\r\n\r\n      dispatch(getContactsSuccess(contacts));\r\n    } else dispatch(getContactsSuccess([]));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error));\r\n  }\r\n};\r\n\r\nexport const operationDeleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst ContactListWrapper = styled.div`\r\n  padding: 10px 0;\r\n\r\n  li:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  .myList-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n  .myList-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .myList-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .myList-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms;\r\n  }\r\n`;\r\n\r\nexport default ContactListWrapper;\r\n","import styled from 'styled-components';\r\n\r\nconst ContactLi = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 5px 15px;\r\n  border: 1px solid navy;\r\n  border-radius: 5px;\r\n  box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n\r\n  .contactListName {\r\n    font-weight: 700;\r\n    margin-right: 5px;\r\n  }\r\n  .contactListNumber {\r\n    margin-right: 10px;\r\n  }\r\n  .contactListBtn {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .contactListBtn:hover,\r\n  .contactListBtn:focus {\r\n    background-color: yellow;\r\n  }\r\n`;\r\n\r\nexport default ContactLi;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactLi from './ContactListItemStyled';\r\nimport { operationDeleteContact } from '../../../redux/operations/phonebookOperations';\r\nimport { setFilter } from '../../../redux/actions/phonebookActions';\r\nimport {\r\n  getFilter,\r\n  getFilteredContacts,\r\n} from '../../../redux/selectors/phonebookSelectors';\r\n\r\nconst ContactListItem = ({ item }) => {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onHandleDelete = e => {\r\n    const id = e.target.dataset.id;\r\n    dispatch(operationDeleteContact(id));\r\n\r\n    if (\r\n      contacts.filter(item =>\r\n        item.name.toLowerCase().includes(filter.toLowerCase()),\r\n      ).length < 2\r\n    ) {\r\n      dispatch(setFilter(''));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContactLi>\r\n      <span className=\"contactListName\" key={item.id}>\r\n        {item.name}:\r\n      </span>\r\n      <span className=\"contactListNumber\">{item.number}</span>\r\n      <button\r\n        className=\"contactListBtn\"\r\n        type=\"button\"\r\n        onClick={onHandleDelete}\r\n        data-id={item.id}\r\n      >\r\n        Delete contact\r\n      </button>\r\n    </ContactLi>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport ContactListWrapper from './ContactListStyled';\r\nimport { operationGetContacts } from '../../redux/operations/phonebookOperations';\r\nimport ContactListItem from './contactListItem/ContactListItem';\r\nimport {\r\n  getFilter,\r\n  getFilteredContacts,\r\n} from '../../redux/selectors/phonebookSelectors';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(operationGetContacts());\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <ContactListWrapper>\r\n      <TransitionGroup component=\"ul\" classnames=\"list\">\r\n        {contacts\r\n          .filter(item =>\r\n            item.name.toLowerCase().includes(filter.toLowerCase()),\r\n          )\r\n          .map(item => (\r\n            <CSSTransition classNames=\"myList\" key={item.id} timeout={250}>\r\n              <ContactListItem item={item} />\r\n            </CSSTransition>\r\n          ))}\r\n      </TransitionGroup>\r\n    </ContactListWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from 'styled-components';\r\n\r\nconst FilterWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 20px 0;\r\n\r\n  .filterLabel {\r\n    font-weight: 700;\r\n    display: block;\r\n  }\r\n  .filterInput {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default FilterWrapper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setFilter } from '../../redux/actions/phonebookActions';\r\nimport FilterWrapper from './FilterStyled';\r\n\r\nconst Filter = ({ setFilter, filter }) => {\r\n  const onHandleChange = e => {\r\n    const { value } = e.target;\r\n    setFilter(value);\r\n  };\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      <label className=\"filterLabel\">\r\n        Search by name\r\n        <input\r\n          className=\"filterInput\"\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.phonebook.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilter: value => {\r\n      dispatch(setFilter(value));\r\n    },\r\n  };\r\n};\r\n\r\nFilter.propTypes = {\r\n  setFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { getContacts, isLoading } from '../redux/selectors/phonebookSelectors';\r\nimport AppWrapper from './AppStyled';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\n\r\nconst App = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const loading = useSelector(isLoading);\r\n\r\n  return (\r\n    <AppWrapper>\r\n      {loading && (\r\n        <div>\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n          />\r\n        </div>\r\n      )}\r\n      <CSSTransition className=\"myTitle\" in={true} appear={true} timeout={500}>\r\n        <h1 className=\"pageTitle\">Phonebook</h1>\r\n      </CSSTransition>\r\n\r\n      <ContactForm />\r\n\r\n      <h2 className=\"contactsTitle\">Contacts</h2>\r\n\r\n      <CSSTransition\r\n        classNames=\"myFilter\"\r\n        in={contacts.length > 1}\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <Filter />\r\n      </CSSTransition>\r\n\r\n      <ContactList />\r\n    </AppWrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  setFilter,\r\n} from '../actions/phonebookActions';\r\n\r\nconst onAddContact = (state, { payload }) => [...state, payload];\r\nconst onDeleteContact = (state, { payload }) => [\r\n  ...state.filter(item => item.id !== payload),\r\n];\r\nconst onSetFilter = (_, { payload }) => payload;\r\nconst onGetInitialContacts = (_, { payload }) => [...payload];\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [addContactSuccess]: onAddContact,\r\n  [deleteContactSuccess]: onDeleteContact,\r\n  [getContactsSuccess]: onGetInitialContacts,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [setFilter]: onSetFilter,\r\n});\r\n\r\nconst loaderReducer = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [getContactsError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst phonebookReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  loader: loaderReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nexport default phonebookReducer;\r\n","import { combineReducers } from 'redux';\r\nimport phonebookReducer from './phonebookReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  phonebook: phonebookReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from '../redux/reducers/rootReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}